//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotoTagsSynchronizer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.7.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastFolder {
            get {
                return ((string)(this["LastFolder"]));
            }
            set {
                this["LastFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1173, 778")]
        public global::System.Drawing.Size MainFormSize {
            get {
                return ((global::System.Drawing.Size)(this["MainFormSize"]));
            }
            set {
                this["MainFormSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("283")]
        public int SplitContainerFolder {
            get {
                return ((int)(this["SplitContainerFolder"]));
            }
            set {
                this["SplitContainerFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("549")]
        public int SplitContainerImages {
            get {
                return ((int)(this["SplitContainerImages"]));
            }
            set {
                this["SplitContainerImages"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("514")]
        public int SplitContainerMain {
            get {
                return ((int)(this["SplitContainerMain"]));
            }
            set {
                this["SplitContainerMain"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("277")]
        public int SplitContainerMap {
            get {
                return ((int)(this["SplitContainerMap"]));
            }
            set {
                this["SplitContainerMap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50, 50")]
        public global::System.Drawing.Point MainFormLocation {
            get {
                return ((global::System.Drawing.Point)(this["MainFormLocation"]));
            }
            set {
                this["MainFormLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastGoogleLocationFolder {
            get {
                return ((string)(this["LastGoogleLocationFolder"]));
            }
            set {
                this["LastGoogleLocationFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection LocationUsers {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["LocationUsers"]));
            }
            set {
                this["LocationUsers"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LocationUser {
            get {
                return ((string)(this["LocationUser"]));
            }
            set {
                this["LocationUser"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsMainFormMaximized {
            get {
                return ((bool)(this["IsMainFormMaximized"]));
            }
            set {
                this["IsMainFormMaximized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("12")]
        public int ComboBoxGoogleTimeZoneShift {
            get {
                return ((int)(this["ComboBoxGoogleTimeZoneShift"]));
            }
            set {
                this["ComboBoxGoogleTimeZoneShift"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int ComboBoxGoogleLocationInterval {
            get {
                return ((int)(this["ComboBoxGoogleLocationInterval"]));
            }
            set {
                this["ComboBoxGoogleLocationInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("13")]
        public int ComboBoxMapZoomLevel {
            get {
                return ((int)(this["ComboBoxMapZoomLevel"]));
            }
            set {
                this["ComboBoxMapZoomLevel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int RenderertoolStripComboBox {
            get {
                return ((int)(this["RenderertoolStripComboBox"]));
            }
            set {
                this["RenderertoolStripComboBox"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CloseWarningWindowsAutomatically {
            get {
                return ((bool)(this["CloseWarningWindowsAutomatically"]));
            }
            set {
                this["CloseWarningWindowsAutomatically"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int MediaAiConfidence {
            get {
                return ((int)(this["MediaAiConfidence"]));
            }
            set {
                this["MediaAiConfidence"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeKeywords {
            get {
                return ((int)(this["CellSizeKeywords"]));
            }
            set {
                this["CellSizeKeywords"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizePeoples {
            get {
                return ((int)(this["CellSizePeoples"]));
            }
            set {
                this["CellSizePeoples"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeMap {
            get {
                return ((int)(this["CellSizeMap"]));
            }
            set {
                this["CellSizeMap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeDates {
            get {
                return ((int)(this["CellSizeDates"]));
            }
            set {
                this["CellSizeDates"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeExiftool {
            get {
                return ((int)(this["CellSizeExiftool"]));
            }
            set {
                this["CellSizeExiftool"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeWarnings {
            get {
                return ((int)(this["CellSizeWarnings"]));
            }
            set {
                this["CellSizeWarnings"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeProperties {
            get {
                return ((int)(this["CellSizeProperties"]));
            }
            set {
                this["CellSizeProperties"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowHistortyColumns {
            get {
                return ((bool)(this["ShowHistortyColumns"]));
            }
            set {
                this["ShowHistortyColumns"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowErrorColumns {
            get {
                return ((bool)(this["ShowErrorColumns"]));
            }
            set {
                this["ShowErrorColumns"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeRename {
            get {
                return ((int)(this["CellSizeRename"]));
            }
            set {
                this["CellSizeRename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%Trim%%MediaFileNow_DateTime% %FileNameWithoutDateTime%%Extension%")]
        public string RenameVariable {
            get {
                return ((string)(this["RenameVariable"]));
            }
            set {
                this["RenameVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("yyyy_MM_dd_HH_mm_ss\r\nyyyy_MM_dd-HH_mm_ss\r\nyyyy_MM_dd HH_mm_ss\r\nyyyy_MM_dd.HH_mm_s" +
            "s\r\nyyyy_MM_ddHH_mm_ss\r\n\r\nyyyy_MM_dd_HH.mm.ss\r\nyyyy_MM_dd-HH.mm.ss\r\nyyyy_MM_dd HH" +
            ".mm.ss\r\nyyyy_MM_dd.HH.mm.ss\r\nyyyy_MM_ddHH.mm.ss\r\n\r\nyyyy_MM_dd_HH mm ss\r\nyyyy_MM_" +
            "dd-HH mm ss\r\nyyyy_MM_dd HH mm ss\r\nyyyy_MM_dd.HH mm ss\r\nyyyy_MM_ddHH mm ss\r\n\r\nyyy" +
            "y_MM_dd_HHmmss\r\nyyyy_MM_dd-HHmmss\r\nyyyy_MM_dd HHmmss\r\nyyyy_MM_dd.HHmmss\r\nyyyy_MM" +
            "_ddHHmmss\r\n\r\n\r\n\r\n\r\nyyyy-MM-dd_HH-mm-ss\r\nyyyy-MM-dd-HH-mm-ss\r\nyyyy-MM-dd HH-mm-ss" +
            "\r\nyyyy-MM-dd.HH-mm-ss\r\nyyyy-MM-dd.HH-mm-ss\r\nyyyy-MM-ddHH-mm-ss\r\n\r\nyyyy-MM-dd_HH." +
            "mm.ss\r\nyyyy-MM-dd-HH.mm.ss\r\nyyyy-MM-dd HH.mm.ss\r\nyyyy-MM-dd.HH.mm.ss\r\nyyyy-MM-dd" +
            "HH.mm.ss\r\n\r\nyyyy-MM-dd_HH mm ss\r\nyyyy-MM-dd-HH mm ss\r\nyyyy-MM-dd HH mm ss\r\nyyyy-" +
            "MM-dd.HH mm ss\r\nyyyy-MM-ddHH mm ss\r\n\r\nyyyy-MM-dd_HHmmss\r\nyyyy-MM-dd-HHmmss\r\nyyyy" +
            "-MM-dd HHmmss\r\nyyyy-MM-dd.HHmmss\r\nyyyy-MM-ddHHmmss\r\n\r\n\r\n\r\n\r\nyyyy MM dd_HH-mm-ss\r" +
            "\nyyyy MM dd-HH-mm-ss\r\nyyyy MM dd HH-mm-ss\r\nyyyy MM dd.HH-mm-ss\r\nyyyy MM ddHH-mm-" +
            "ss\r\n\r\nyyyy MM dd_HH.mm.ss\r\nyyyy MM dd-HH.mm.ss\r\nyyyy MM dd HH.mm.ss\r\nyyyy MM dd." +
            "HH.mm.ss\r\nyyyy MM ddHH.mm.ss\r\n\r\nyyyy MM dd_HH mm ss\r\nyyyy MM dd-HH mm ss\r\nyyyy M" +
            "M dd HH mm ss\r\nyyyy MM dd.HH mm ss\r\nyyyy MM ddHH mm ss\r\n\r\nyyyy MM dd_HHmmss\r\nyyy" +
            "y MM dd-HHmmss\r\nyyyy MM dd HHmmss\r\nyyyy MM dd.HHmmss\r\nyyyy MM ddHHmmss\r\n\r\n\r\n\r\n\r\n" +
            "yyyy.MM.dd_HH-mm-ss\r\nyyyy.MM.dd-HH-mm-ss\r\nyyyy.MM.dd HH-mm-ss\r\nyyyy.MM.dd.HH-mm-" +
            "ss\r\nyyyy.MM.ddHH-mm-ss\r\n\r\nyyyy.MM.dd_HH.mm.ss\r\nyyyy.MM.dd-HH.mm.ss\r\nyyyy.MM.dd H" +
            "H.mm.ss\r\nyyyy.MM.dd.HH.mm.ss\r\nyyyy.MM.ddHH.mm.ss\r\n\r\nyyyy.MM.dd_HH mm ss\r\nyyyy.MM" +
            ".dd-HH mm ss\r\nyyyy.MM.dd HH mm ss\r\nyyyy.MM.dd.HH mm ss\r\nyyyy.MM.ddHH mm ss\r\n\r\nyy" +
            "yy.MM.dd_HHmmss\r\nyyyy.MM.dd-HHmmss\r\nyyyy.MM.dd HHmmss\r\nyyyy.MM.dd.HHmmss\r\nyyyy.M" +
            "M.ddHHmmss\r\n\r\n\r\n\r\n\r\nyyyyMMdd_HH-mm-ss\r\nyyyyMMdd-HH-mm-ss\r\nyyyyMMdd HH-mm-ss\r\nyyy" +
            "yMMdd.HH-mm-ss\r\nyyyyMMddHH-mm-ss\r\n\r\nyyyyMMdd_HH.mm.ss\r\nyyyyMMdd-HH.mm.ss\r\nyyyyMM" +
            "dd HH.mm.ss\r\nyyyyMMdd.HH.mm.ss\r\nyyyyMMddHH.mm.ss\r\n\r\nyyyyMMdd_HH mm ss\r\nyyyyMMdd-" +
            "HH mm ss\r\nyyyyMMdd HH mm ss\r\nyyyyMMdd.HH mm ss\r\nyyyyMMddHH mm ss\r\n\r\nyyyyMMdd_HHm" +
            "mss\r\nyyyyMMdd-HHmmss\r\nyyyyMMdd HHmmss\r\nyyyyMMdd.HHmmss\r\nyyyyMMddHHmmss\r\n\r\n\r\n\r\n\r\n" +
            "\r\n\r\n\r\nyyyy_MM_dd_HH_mm\r\nyyyy_MM_dd-HH_mm\r\nyyyy_MM_dd HH_mm\r\nyyyy_MM_dd.HH_mm\r\nyy" +
            "yy_MM_ddHH_mm\r\n\r\nyyyy_MM_dd_HH.mm\r\nyyyy_MM_dd-HH.mm\r\nyyyy_MM_dd HH.mm\r\nyyyy_MM_d" +
            "d.HH.mm\r\nyyyy_MM_ddHH.mm\r\n\r\nyyyy_MM_dd_HH mm\r\nyyyy_MM_dd-HH mm\r\nyyyy_MM_dd HH mm" +
            "\r\nyyyy_MM_dd.HH mm\r\nyyyy_MM_ddHH mm\r\n\r\nyyyy_MM_dd_HHmm\r\nyyyy_MM_dd-HHmm\r\nyyyy_MM" +
            "_dd HHmm\r\nyyyy_MM_dd.HHmm\r\nyyyy_MM_ddHHmm\r\n\r\n\r\n\r\n\r\nyyyy-MM-dd_HH-mm\r\nyyyy-MM-dd-" +
            "HH-mm\r\nyyyy-MM-dd HH-mm\r\nyyyy-MM-dd.HH-mm\r\nyyyy-MM-dd.HH-mm\r\nyyyy-MM-ddHH-mm\r\n\r\n" +
            "yyyy-MM-dd_HH.mm\r\nyyyy-MM-dd-HH.mm\r\nyyyy-MM-dd HH.mm\r\nyyyy-MM-dd.HH.mm\r\nyyyy-MM-" +
            "ddHH.mm\r\n\r\nyyyy-MM-dd_HH mm\r\nyyyy-MM-dd-HH mm\r\nyyyy-MM-dd HH mm\r\nyyyy-MM-dd.HH m" +
            "m\r\nyyyy-MM-ddHH mm\r\n\r\nyyyy-MM-dd_HHmm\r\nyyyy-MM-dd-HHmm\r\nyyyy-MM-dd HHmm\r\nyyyy-MM" +
            "-dd.HHmm\r\nyyyy-MM-ddHHmm\r\n\r\n\r\n\r\n\r\nyyyy MM dd_HH-mm\r\nyyyy MM dd-HH-mm\r\nyyyy MM dd" +
            " HH-mm\r\nyyyy MM dd.HH-mm\r\nyyyy MM ddHH-mm\r\n\r\nyyyy MM dd_HH.mm\r\nyyyy MM dd-HH.mm\r" +
            "\nyyyy MM dd HH.mm\r\nyyyy MM dd.HH.mm\r\nyyyy MM ddHH.mm\r\n\r\nyyyy MM dd_HH mm\r\nyyyy M" +
            "M dd-HH mm\r\nyyyy MM dd HH mm\r\nyyyy MM dd.HH mm\r\nyyyy MM ddHH mm\r\n\r\nyyyy MM dd_HH" +
            "mm\r\nyyyy MM dd-HHmm\r\nyyyy MM dd HHmm\r\nyyyy MM dd.HHmm\r\nyyyy MM ddHHmm\r\n\r\n\r\n\r\n\r\ny" +
            "yyy.MM.dd_HH-mm\r\nyyyy.MM.dd-HH-mm\r\nyyyy.MM.dd HH-mm\r\nyyyy.MM.dd.HH-mm\r\nyyyy.MM.d" +
            "dHH-mm\r\n\r\nyyyy.MM.dd_HH.mm\r\nyyyy.MM.dd-HH.mm\r\nyyyy.MM.dd HH.mm\r\nyyyy.MM.dd.HH.mm" +
            "\r\nyyyy.MM.ddHH.mm\r\n\r\nyyyy.MM.dd_HH mm\r\nyyyy.MM.dd-HH mm\r\nyyyy.MM.dd HH mm\r\nyyyy." +
            "MM.dd.HH mm\r\nyyyy.MM.ddHH mm\r\n\r\nyyyy.MM.dd_HHmm\r\nyyyy.MM.dd-HHmm\r\nyyyy.MM.dd HHm" +
            "m\r\nyyyy.MM.dd.HHmm\r\nyyyy.MM.ddHHmm\r\n\r\n\r\n\r\n\r\nyyyyMMdd_HH-mm\r\nyyyyMMdd-HH-mm\r\nyyyy" +
            "MMdd HH-mm\r\nyyyyMMdd.HH-mm\r\nyyyyMMddHH-mm\r\n\r\nyyyyMMdd_HH.mm\r\nyyyyMMdd-HH.mm\r\nyyy" +
            "yMMdd HH.mm\r\nyyyyMMdd.HH.mm\r\nyyyyMMddHH.mm\r\n\r\nyyyyMMdd_HH mm\r\nyyyyMMdd-HH mm\r\nyy" +
            "yyMMdd HH mm\r\nyyyyMMdd.HH mm\r\nyyyyMMddHH mm\r\n\r\nyyyyMMdd_HHmm\r\nyyyyMMdd-HHmm\r\nyyy" +
            "yMMdd HHmm\r\nyyyyMMdd.HHmm\r\nyyyyMMddHHmm\r\n\r\n\r\n\r\nyyyy_MM_dd\r\nyyyy-MM-dd\r\nyyyy MM d" +
            "d\r\nyyyy.MM.dd\r\nyyyyMMdd\r\n\r\n")]
        public string RenameDateFormats {
            get {
                return ((string)(this["RenameDateFormats"]));
            }
            set {
                this["RenameDateFormats"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AutoCorrect {
            get {
                return ((string)(this["AutoCorrect"]));
            }
            set {
                this["AutoCorrect"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-charset\r\nfilename=UTF8\r\n-overwrite_original\r\n-m\r\n-F\r\n{SystemDateTime}{SystenDate" +
            "TimeDateStamp}{SystenDateTimeTimeStamp}{SystemDateTime_yyyy}{SystemDateTime_MM}{" +
            "SystemDateTime_dd}{SystemDateTime_HH}{SystemDateTime_mm}{SystemDateTime_ss}{File" +
            "Name}{FileNameWithoutExtension}{FileNameWithoutDateTime}{FileExtension}{FileDire" +
            "ctory}{FileSize}{FileDateCreated}{FileDateCreatedDateStamp}{FileDateCreatedTimeS" +
            "tamp}{FileDateCreated_yyyy}{FileDateCreated_MM}{FileDateCreated_dd}{FileDateCrea" +
            "ted_HH}{FileDateCreated_mm}{FileDateCreated_ss}{FileDateModified}{IfFileDateModi" +
            "fiedChanged}{FileDateModifiedDateStamp}{FileDateModifiedTimeStamp}{FileDateModif" +
            "ied_yyyy}{FileDateModified_MM}{FileDateModified_dd}{FileDateModified_HH}{FileDat" +
            "eModified_mm}{FileDateModified_ss}{FileLastAccessed}{FileLastAccessedDateStamp}{" +
            "FileLastAccessedTimeStamp}{FileLastAccessed_yyyy}{FileLastAccessed_MM}{FileLastA" +
            "ccessed_dd}{FileLastAccessed_HH}{FileLastAccessed_mm}{FileLastAccessed_ss}{FileM" +
            "imeType}{PersonalTitle}{IfPersonalTitleChanged}{PersonalDescription}{IfPersonalD" +
            "escriptionChanged}{PersonalComments}{IfPersonalCommentsChanged}{PersonalRating}{" +
            "IfPersonalRatingChanged}{PersonalRatingPercent}{PersonalAuthor}{IfPersonalAuthor" +
            "Changed}{PersonalAlbum}{IfPersonalAlbumChanged}{PersonalRegionInfoMP}\r\n{IfLocati" +
            "onDateTimeChanged}-XMP-exif:GPSDateTime={LocationDateTimeUTC}\r\n{IfLocationDateTi" +
            "meChanged}-XMP:GPSDateTime={LocationDateTimeUTC}\r\n{IfLocationDateTimeChanged}-GP" +
            "S:GPSDateStamp={LocationDateTimeDateStamp}\r\n{IfLocationDateTimeChanged}-GPS:GPST" +
            "imeStamp={LocationDateTimeTimeStamp}\r\n{IfLocationDateTimeChanged}-GPSDateStamp={" +
            "LocationDateTimeDateStamp}\r\n{IfLocationDateTimeChanged}-GPSTimeStamp={LocationDa" +
            "teTimeTimeStamp}\r\n                    \r\n{IfMediaDateTakenChanged}-Composite:SubS" +
            "ecCreateDate={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-EXIF:CreateDate={MediaD" +
            "ateTaken}\r\n{IfMediaDateTakenChanged}-XMP-xmp:CreateDate={MediaDateTaken}\r\n{IfMed" +
            "iaDateTakenChanged}-XMP:CreateDate={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-X" +
            "MP:DateTimeOriginal={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-IPTC:DigitalCrea" +
            "tionDate={MediaDateTakenDateStamp}\r\n{IfMediaDateTakenChanged}-IPTC:DigitalCreati" +
            "onTime={MediaDateTakenTimeStamp}\r\n\r\n{IfMediaDateTakenChanged}-Composite:SubSecDa" +
            "teTimeOriginal={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-ExifIFD:DateTimeOrigi" +
            "nal={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-EXIF:DateTimeOriginal={MediaDate" +
            "Taken}\r\n{IfMediaDateTakenChanged}-XMP-photoshop:DateCreated={MediaDateTaken}\r\n{I" +
            "fMediaDateTakenChanged}-IPTC:DateCreated={MediaDateTakenDateStamp}\r\n{IfMediaDate" +
            "TakenChanged}-IPTC:TimeCreated={MediaDateTakenTimeStamp}\r\n{IfMediaDateTakenChang" +
            "ed}-CreateDate={MediaDateTaken}\r\n\r\n{IfPersonalAlbumChanged}-XMP-xmpDM:Album={Per" +
            "sonalAlbum}\r\n{IfPersonalAlbumChanged}-XMP:Album={PersonalAlbum}\r\n{IfPersonalAlbu" +
            "mChanged}-IPTC:Headline={PersonalAlbum}\r\n{IfPersonalAlbumChanged}-XMP-photoshop:" +
            "Headline={PersonalAlbum}\r\n{IfPersonalAlbumChanged}-ItemList:Album={PersonalAlbum" +
            "}\r\n\r\n{IfPersonalAuthorChanged}-EXIF:Artist={PersonalAuthor}\r\n{IfPersonalAuthorCh" +
            "anged}-IPTC:By-line={PersonalAuthor}\r\n{IfPersonalAuthorChanged}-EXIF:XPAuthor={P" +
            "ersonalAuthor}\r\n{IfPersonalAuthorChanged}-ItemList:Author={PersonalAuthor}\r\n{IfP" +
            "ersonalAuthorChanged}-Creator={PersonalAuthor}\r\n\r\n{IfPersonalCommentsChanged}-Fi" +
            "le:Comment={PersonalComments}\r\n{IfPersonalCommentsChanged}-ExifIFD:UserComment={" +
            "PersonalComments}\r\n{IfPersonalCommentsChanged}-EXIF:UserComment={PersonalComment" +
            "s}\r\n{IfPersonalCommentsChanged}-EXIF:XPComment={PersonalComments}\r\n{IfPersonalCo" +
            "mmentsChanged}-XMP-album:Notes={PersonalComments}\r\n{IfPersonalCommentsChanged}-X" +
            "MP-acdsee:Notes={PersonalComments}\r\n{IfPersonalCommentsChanged}-XMP:UserComment=" +
            "{PersonalComments}\r\n{IfPersonalCommentsChanged}-XMP:Notes={PersonalComments}\r\n{I" +
            "fPersonalCommentsChanged}-ItemList:Comment={PersonalComments} \r\n     \r\n{IfPerson" +
            "alDescriptionChanged}-EXIF:ImageDescription={PersonalDescription}\r\n{IfPersonalDe" +
            "scriptionChanged}-XMP:ImageDescription={PersonalDescription}\r\n{IfPersonalDescrip" +
            "tionChanged}-XMP-dc:Description={PersonalDescription}\r\n{IfPersonalDescriptionCha" +
            "nged}-XMP:Description={PersonalDescription}\r\n{IfPersonalDescriptionChanged}-IPTC" +
            ":Caption-Abstract={PersonalDescription}\r\n{IfPersonalDescriptionChanged}-ItemList" +
            ":Description={PersonalDescription} \r\n{IfPersonalDescriptionChanged}-Description=" +
            "{PersonalDescription} \r\n\r\n{IfPersonalRatingChanged}-XMP-microsoft:RatingPercent=" +
            "{PersonalRatingPercent}\r\n{IfPersonalRatingChanged}-XMP:RatingPercent={PersonalRa" +
            "tingPercent}\r\n{IfPersonalRatingChanged}-EXIF:RatingPercent={PersonalRatingPercen" +
            "t}\r\n\r\n{IfPersonalRatingChanged}-XMP-xmp:Rating={PersonalRating}\r\n{IfPersonalRati" +
            "ngChanged}-XMP:Rating={PersonalRating}\r\n{IfPersonalRatingChanged}-XMP-acdsee:Rat" +
            "ing={PersonalRating}\r\n{IfPersonalRatingChanged}-EXIF:Rating={PersonalRating}\r\n{I" +
            "fPersonalRatingChanged}-Rating={PersonalRating}\r\n\r\n{IfPersonalTitleChanged}-Item" +
            "List:Title={PersonalTitle}\r\n{IfPersonalTitleChanged}-EXIF:XPTitle={PersonalTitle" +
            "}\r\n{IfPersonalTitleChanged}-XMP-dc:Title={PersonalTitle}\r\n{IfPersonalTitleChange" +
            "d}-XMP:Title={PersonalTitle}\r\n{IfPersonalTitleChanged}-ItemList:Title={PersonalT" +
            "itle} \r\n\r\n{IfLocationLatitudeChanged}-EXIF:GPSLatitude={LocationLatitude}\r\n{IfLo" +
            "cationLatitudeChanged}-XMP-exif:GPSLatitude={LocationLatitude}\r\n{IfLocationLatit" +
            "udeChanged}-XMP:GPSLatitude={LocationLatitude}\r\n{IfLocationLatitudeChanged}-GPS:" +
            "GPSLatitude={LocationLatitude}\r\n{IfLocationLatitudeChanged}-GPSLatitude={Locatio" +
            "nLatitude}\r\n\r\n{IfLocationLongitudeChanged}-EXIF:GPSLongitude={LocationLongitude}" +
            "\r\n{IfLocationLongitudeChanged}-XMP-exif:GPSLongitude={LocationLongitude}\r\n{IfLoc" +
            "ationLongitudeChanged}-XMP:GPSLongitude={LocationLongitude}\r\n{IfLocationLongitud" +
            "eChanged}-GPS:GPSLongitude={LocationLongitude}\r\n{IfLocationLongitudeChanged}-GPS" +
            "Longitude={LocationLongitude}\r\n\r\n{IfLocationNameChanged}-XMP:Location={LocationN" +
            "ame}\r\n{IfLocationNameChanged}-XMP-iptcCore:Location={LocationName}\r\n{IfLocationN" +
            "ameChanged}-XMP-iptcExt:LocationShownSublocation={LocationName}\r\n{IfLocationName" +
            "Changed}-XMP:LocationCreatedSublocation={LocationName}\r\n{IfLocationNameChanged}-" +
            "IPTC:Sub-location={LocationName}\r\n{IfLocationNameChanged}-Sub-location={Location" +
            "Name}\r\n{IfLocationNameChanged}-Location={LocationName} \r\n\r\n{IfLocationStateChang" +
            "ed}-XMP-iptcExt:LocationShownProvinceState={LocationState}\r\n{IfLocationStateChan" +
            "ged}-XMP-photoshop:State={LocationState}\r\n{IfLocationStateChanged}-IPTC:Province" +
            "-State={LocationState}\r\n{IfLocationStateChanged}-XMP:State={LocationState}\r\n{IfL" +
            "ocationStateChanged}-State={LocationState} \r\n\r\n\r\n{IfLocationCityChanged}-XMP-pho" +
            "toshop:City={LocationCity}\r\n{IfLocationCityChanged}-XMP-iptcExt:LocationShownCit" +
            "y={LocationCity}\r\n{IfLocationCityChanged}-IPTC:City={LocationCity}\r\n{IfLocationC" +
            "ityChanged}-XMP:City={LocationCity}\r\n{IfLocationCityChanged}-City={LocationCity}" +
            " \r\n\r\n{IfLocationCountryChanged}-IPTC:Country-PrimaryLocationName={LocationCountr" +
            "y}\r\n{IfLocationCountryChanged}-XMP-photoshop:Country={LocationCountry}\r\n{IfLocat" +
            "ionCountryChanged}-XMP-iptcExt:LocationShownCountryName={LocationCountry}\r\n{IfLo" +
            "cationCountryChanged}-XMP:Country={LocationCountry}\r\n{IfLocationCountryChanged}-" +
            "Country={LocationCountry} \r\n\r\n{IfPersonalRegionChanged}-ImageRegion=\r\n{IfPersona" +
            "lRegionChanged}-RegionInfoMP={PersonalRegionInfoMP}\r\n{IfPersonalRegionChanged}-R" +
            "egionInfo={PersonalRegionInfo}\r\n\r\n{IfPersonalKeywordsChanged}-Subject=\r\n{IfPerso" +
            "nalKeywordsChanged}-Keyword=\r\n{IfPersonalKeywordsChanged}-Keywords=\r\n{IfPersonal" +
            "KeywordsChanged}-XPKeywords=\r\n{IfPersonalKeywordsChanged}-Category=\r\n{IfPersonal" +
            "KeywordsChanged}-Categories=\r\n{IfPersonalKeywordsChanged}-CatalogSets=\r\n\r\n{IfPer" +
            "sonalKeywordsChanged}-HierarchicalKeywords=\r\n{IfPersonalKeywordsChanged}-Hierarc" +
            "hicalSubject=\r\n{IfPersonalKeywordsChanged}-LastKeywordXMP=\r\n{IfPersonalKeywordsC" +
            "hanged}-LastKeywordIPTC=\r\n{IfPersonalKeywordsChanged}-TagsList=\r\n\r\n{IfPersonalKe" +
            "ywordsChanged}-Categories={PersonalKeywordsXML}\r\n{IfPersonalKeywordsChanged}-XPK" +
            "eywords={PersonalKeywordsList}\r\n\r\n{IfPersonalKeywordsChanged}{PersonalKeywordIte" +
            "ms}")]
        public string WriteMetadataTags {
            get {
                return ((string)(this["WriteMetadataTags"]));
            }
            set {
                this["WriteMetadataTags"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-Keywords+={KeywordItem}\r\n-Subject+={KeywordItem}\r\n-TagsList+={KeywordItem}\r\n-Cat" +
            "alogSets+={KeywordItem}")]
        public string WriteMetadataKeywordAdd {
            get {
                return ((string)(this["WriteMetadataKeywordAdd"]));
            }
            set {
                this["WriteMetadataKeywordAdd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool WriteMetadataPropertiesVideoAlbum {
            get {
                return ((bool)(this["WriteMetadataPropertiesVideoAlbum"]));
            }
            set {
                this["WriteMetadataPropertiesVideoAlbum"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool WriteMetadataPropertiesVideoKeywords {
            get {
                return ((bool)(this["WriteMetadataPropertiesVideoKeywords"]));
            }
            set {
                this["WriteMetadataPropertiesVideoKeywords"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("192, 192")]
        public global::System.Drawing.Size ApplicationThumbnail {
            get {
                return ((global::System.Drawing.Size)(this["ApplicationThumbnail"]));
            }
            set {
                this["ApplicationThumbnail"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int ThumbmailViewSizeIndex {
            get {
                return ((int)(this["ThumbmailViewSizeIndex"]));
            }
            set {
                this["ThumbmailViewSizeIndex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("en;q=0.5,no;q=0.3,ru;q=0.2,*;q=0.1")]
        public string ApplicationPreferredLanguages {
            get {
                return ((string)(this["ApplicationPreferredLanguages"]));
            }
            set {
                this["ApplicationPreferredLanguages"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-Keywords-={KeywordItem}\r\n-Subject-={KeywordItem}\r\n-TagsList-={KeywordItem}\r\n-Cat" +
            "alogSets-={KeywordItem}")]
        public string WriteMetadataKeywordDelete {
            get {
                return ((string)(this["WriteMetadataKeywordDelete"]));
            }
            set {
                this["WriteMetadataKeywordDelete"] = value;
            }
        }
    }
}
