//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotoTagsSynchronizer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.8.1.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastFolder {
            get {
                return ((string)(this["LastFolder"]));
            }
            set {
                this["LastFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1173, 778")]
        public global::System.Drawing.Size MainFormSize {
            get {
                return ((global::System.Drawing.Size)(this["MainFormSize"]));
            }
            set {
                this["MainFormSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("283")]
        public int SplitContainerFolder {
            get {
                return ((int)(this["SplitContainerFolder"]));
            }
            set {
                this["SplitContainerFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("549")]
        public int SplitContainerImages {
            get {
                return ((int)(this["SplitContainerImages"]));
            }
            set {
                this["SplitContainerImages"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("514")]
        public int SplitContainerMain {
            get {
                return ((int)(this["SplitContainerMain"]));
            }
            set {
                this["SplitContainerMain"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("277")]
        public int SplitContainerMap {
            get {
                return ((int)(this["SplitContainerMap"]));
            }
            set {
                this["SplitContainerMap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50, 50")]
        public global::System.Drawing.Point MainFormLocation {
            get {
                return ((global::System.Drawing.Point)(this["MainFormLocation"]));
            }
            set {
                this["MainFormLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastGoogleLocationFolder {
            get {
                return ((string)(this["LastGoogleLocationFolder"]));
            }
            set {
                this["LastGoogleLocationFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection LocationUsers {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["LocationUsers"]));
            }
            set {
                this["LocationUsers"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LocationUser {
            get {
                return ((string)(this["LocationUser"]));
            }
            set {
                this["LocationUser"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsMainFormMaximized {
            get {
                return ((bool)(this["IsMainFormMaximized"]));
            }
            set {
                this["IsMainFormMaximized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("12")]
        public int ComboBoxGoogleTimeZoneShift {
            get {
                return ((int)(this["ComboBoxGoogleTimeZoneShift"]));
            }
            set {
                this["ComboBoxGoogleTimeZoneShift"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int ComboBoxGoogleLocationInterval {
            get {
                return ((int)(this["ComboBoxGoogleLocationInterval"]));
            }
            set {
                this["ComboBoxGoogleLocationInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("13")]
        public int ComboBoxMapZoomLevel {
            get {
                return ((int)(this["ComboBoxMapZoomLevel"]));
            }
            set {
                this["ComboBoxMapZoomLevel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int RenderertoolStripComboBox {
            get {
                return ((int)(this["RenderertoolStripComboBox"]));
            }
            set {
                this["RenderertoolStripComboBox"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CloseWarningWindowsAutomatically {
            get {
                return ((bool)(this["CloseWarningWindowsAutomatically"]));
            }
            set {
                this["CloseWarningWindowsAutomatically"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int MediaAiConfidence {
            get {
                return ((int)(this["MediaAiConfidence"]));
            }
            set {
                this["MediaAiConfidence"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeKeywords {
            get {
                return ((int)(this["CellSizeKeywords"]));
            }
            set {
                this["CellSizeKeywords"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizePeoples {
            get {
                return ((int)(this["CellSizePeoples"]));
            }
            set {
                this["CellSizePeoples"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeMap {
            get {
                return ((int)(this["CellSizeMap"]));
            }
            set {
                this["CellSizeMap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeDates {
            get {
                return ((int)(this["CellSizeDates"]));
            }
            set {
                this["CellSizeDates"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeExiftool {
            get {
                return ((int)(this["CellSizeExiftool"]));
            }
            set {
                this["CellSizeExiftool"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeWarnings {
            get {
                return ((int)(this["CellSizeWarnings"]));
            }
            set {
                this["CellSizeWarnings"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeProperties {
            get {
                return ((int)(this["CellSizeProperties"]));
            }
            set {
                this["CellSizeProperties"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowHistortyColumns {
            get {
                return ((bool)(this["ShowHistortyColumns"]));
            }
            set {
                this["ShowHistortyColumns"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowErrorColumns {
            get {
                return ((bool)(this["ShowErrorColumns"]));
            }
            set {
                this["ShowErrorColumns"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int CellSizeRename {
            get {
                return ((int)(this["CellSizeRename"]));
            }
            set {
                this["CellSizeRename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%Trim%%MediaFileNow_DateTime% %FileNameWithoutDateTime%%Extension%")]
        public string RenameVariable {
            get {
                return ((string)(this["RenameVariable"]));
            }
            set {
                this["RenameVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("yyyy_MM_dd_HH_mm_ss\r\nyyyy_MM_dd-HH_mm_ss\r\nyyyy_MM_dd HH_mm_ss\r\nyyyy_MM_dd.HH_mm_s" +
            "s\r\nyyyy_MM_ddHH_mm_ss\r\n\r\nyyyy_MM_dd_HH.mm.ss\r\nyyyy_MM_dd-HH.mm.ss\r\nyyyy_MM_dd HH" +
            ".mm.ss\r\nyyyy_MM_dd.HH.mm.ss\r\nyyyy_MM_ddHH.mm.ss\r\n\r\nyyyy_MM_dd_HH mm ss\r\nyyyy_MM_" +
            "dd-HH mm ss\r\nyyyy_MM_dd HH mm ss\r\nyyyy_MM_dd.HH mm ss\r\nyyyy_MM_ddHH mm ss\r\n\r\nyyy" +
            "y_MM_dd_HHmmss\r\nyyyy_MM_dd-HHmmss\r\nyyyy_MM_dd HHmmss\r\nyyyy_MM_dd.HHmmss\r\nyyyy_MM" +
            "_ddHHmmss\r\n\r\n\r\n\r\n\r\nyyyy-MM-dd_HH-mm-ss\r\nyyyy-MM-dd-HH-mm-ss\r\nyyyy-MM-dd HH-mm-ss" +
            "\r\nyyyy-MM-dd.HH-mm-ss\r\nyyyy-MM-dd.HH-mm-ss\r\nyyyy-MM-ddHH-mm-ss\r\n\r\nyyyy-MM-dd_HH." +
            "mm.ss\r\nyyyy-MM-dd-HH.mm.ss\r\nyyyy-MM-dd HH.mm.ss\r\nyyyy-MM-dd.HH.mm.ss\r\nyyyy-MM-dd" +
            "HH.mm.ss\r\n\r\nyyyy-MM-dd_HH mm ss\r\nyyyy-MM-dd-HH mm ss\r\nyyyy-MM-dd HH mm ss\r\nyyyy-" +
            "MM-dd.HH mm ss\r\nyyyy-MM-ddHH mm ss\r\n\r\nyyyy-MM-dd_HHmmss\r\nyyyy-MM-dd-HHmmss\r\nyyyy" +
            "-MM-dd HHmmss\r\nyyyy-MM-dd.HHmmss\r\nyyyy-MM-ddHHmmss\r\n\r\n\r\n\r\n\r\nyyyy MM dd_HH-mm-ss\r" +
            "\nyyyy MM dd-HH-mm-ss\r\nyyyy MM dd HH-mm-ss\r\nyyyy MM dd.HH-mm-ss\r\nyyyy MM ddHH-mm-" +
            "ss\r\n\r\nyyyy MM dd_HH.mm.ss\r\nyyyy MM dd-HH.mm.ss\r\nyyyy MM dd HH.mm.ss\r\nyyyy MM dd." +
            "HH.mm.ss\r\nyyyy MM ddHH.mm.ss\r\n\r\nyyyy MM dd_HH mm ss\r\nyyyy MM dd-HH mm ss\r\nyyyy M" +
            "M dd HH mm ss\r\nyyyy MM dd.HH mm ss\r\nyyyy MM ddHH mm ss\r\n\r\nyyyy MM dd_HHmmss\r\nyyy" +
            "y MM dd-HHmmss\r\nyyyy MM dd HHmmss\r\nyyyy MM dd.HHmmss\r\nyyyy MM ddHHmmss\r\n\r\n\r\n\r\n\r\n" +
            "yyyy.MM.dd_HH-mm-ss\r\nyyyy.MM.dd-HH-mm-ss\r\nyyyy.MM.dd HH-mm-ss\r\nyyyy.MM.dd.HH-mm-" +
            "ss\r\nyyyy.MM.ddHH-mm-ss\r\n\r\nyyyy.MM.dd_HH.mm.ss\r\nyyyy.MM.dd-HH.mm.ss\r\nyyyy.MM.dd H" +
            "H.mm.ss\r\nyyyy.MM.dd.HH.mm.ss\r\nyyyy.MM.ddHH.mm.ss\r\n\r\nyyyy.MM.dd_HH mm ss\r\nyyyy.MM" +
            ".dd-HH mm ss\r\nyyyy.MM.dd HH mm ss\r\nyyyy.MM.dd.HH mm ss\r\nyyyy.MM.ddHH mm ss\r\n\r\nyy" +
            "yy.MM.dd_HHmmss\r\nyyyy.MM.dd-HHmmss\r\nyyyy.MM.dd HHmmss\r\nyyyy.MM.dd.HHmmss\r\nyyyy.M" +
            "M.ddHHmmss\r\n\r\n\r\n\r\n\r\nyyyyMMdd_HH-mm-ss\r\nyyyyMMdd-HH-mm-ss\r\nyyyyMMdd HH-mm-ss\r\nyyy" +
            "yMMdd.HH-mm-ss\r\nyyyyMMddHH-mm-ss\r\n\r\nyyyyMMdd_HH.mm.ss\r\nyyyyMMdd-HH.mm.ss\r\nyyyyMM" +
            "dd HH.mm.ss\r\nyyyyMMdd.HH.mm.ss\r\nyyyyMMddHH.mm.ss\r\n\r\nyyyyMMdd_HH mm ss\r\nyyyyMMdd-" +
            "HH mm ss\r\nyyyyMMdd HH mm ss\r\nyyyyMMdd.HH mm ss\r\nyyyyMMddHH mm ss\r\n\r\nyyyyMMdd_HHm" +
            "mss\r\nyyyyMMdd-HHmmss\r\nyyyyMMdd HHmmss\r\nyyyyMMdd.HHmmss\r\nyyyyMMddHHmmss\r\n\r\n\r\n\r\n\r\n" +
            "\r\n\r\n\r\nyyyy_MM_dd_HH_mm\r\nyyyy_MM_dd-HH_mm\r\nyyyy_MM_dd HH_mm\r\nyyyy_MM_dd.HH_mm\r\nyy" +
            "yy_MM_ddHH_mm\r\n\r\nyyyy_MM_dd_HH.mm\r\nyyyy_MM_dd-HH.mm\r\nyyyy_MM_dd HH.mm\r\nyyyy_MM_d" +
            "d.HH.mm\r\nyyyy_MM_ddHH.mm\r\n\r\nyyyy_MM_dd_HH mm\r\nyyyy_MM_dd-HH mm\r\nyyyy_MM_dd HH mm" +
            "\r\nyyyy_MM_dd.HH mm\r\nyyyy_MM_ddHH mm\r\n\r\nyyyy_MM_dd_HHmm\r\nyyyy_MM_dd-HHmm\r\nyyyy_MM" +
            "_dd HHmm\r\nyyyy_MM_dd.HHmm\r\nyyyy_MM_ddHHmm\r\n\r\n\r\n\r\n\r\nyyyy-MM-dd_HH-mm\r\nyyyy-MM-dd-" +
            "HH-mm\r\nyyyy-MM-dd HH-mm\r\nyyyy-MM-dd.HH-mm\r\nyyyy-MM-dd.HH-mm\r\nyyyy-MM-ddHH-mm\r\n\r\n" +
            "yyyy-MM-dd_HH.mm\r\nyyyy-MM-dd-HH.mm\r\nyyyy-MM-dd HH.mm\r\nyyyy-MM-dd.HH.mm\r\nyyyy-MM-" +
            "ddHH.mm\r\n\r\nyyyy-MM-dd_HH mm\r\nyyyy-MM-dd-HH mm\r\nyyyy-MM-dd HH mm\r\nyyyy-MM-dd.HH m" +
            "m\r\nyyyy-MM-ddHH mm\r\n\r\nyyyy-MM-dd_HHmm\r\nyyyy-MM-dd-HHmm\r\nyyyy-MM-dd HHmm\r\nyyyy-MM" +
            "-dd.HHmm\r\nyyyy-MM-ddHHmm\r\n\r\n\r\n\r\n\r\nyyyy MM dd_HH-mm\r\nyyyy MM dd-HH-mm\r\nyyyy MM dd" +
            " HH-mm\r\nyyyy MM dd.HH-mm\r\nyyyy MM ddHH-mm\r\n\r\nyyyy MM dd_HH.mm\r\nyyyy MM dd-HH.mm\r" +
            "\nyyyy MM dd HH.mm\r\nyyyy MM dd.HH.mm\r\nyyyy MM ddHH.mm\r\n\r\nyyyy MM dd_HH mm\r\nyyyy M" +
            "M dd-HH mm\r\nyyyy MM dd HH mm\r\nyyyy MM dd.HH mm\r\nyyyy MM ddHH mm\r\n\r\nyyyy MM dd_HH" +
            "mm\r\nyyyy MM dd-HHmm\r\nyyyy MM dd HHmm\r\nyyyy MM dd.HHmm\r\nyyyy MM ddHHmm\r\n\r\n\r\n\r\n\r\ny" +
            "yyy.MM.dd_HH-mm\r\nyyyy.MM.dd-HH-mm\r\nyyyy.MM.dd HH-mm\r\nyyyy.MM.dd.HH-mm\r\nyyyy.MM.d" +
            "dHH-mm\r\n\r\nyyyy.MM.dd_HH.mm\r\nyyyy.MM.dd-HH.mm\r\nyyyy.MM.dd HH.mm\r\nyyyy.MM.dd.HH.mm" +
            "\r\nyyyy.MM.ddHH.mm\r\n\r\nyyyy.MM.dd_HH mm\r\nyyyy.MM.dd-HH mm\r\nyyyy.MM.dd HH mm\r\nyyyy." +
            "MM.dd.HH mm\r\nyyyy.MM.ddHH mm\r\n\r\nyyyy.MM.dd_HHmm\r\nyyyy.MM.dd-HHmm\r\nyyyy.MM.dd HHm" +
            "m\r\nyyyy.MM.dd.HHmm\r\nyyyy.MM.ddHHmm\r\n\r\n\r\n\r\n\r\nyyyyMMdd_HH-mm\r\nyyyyMMdd-HH-mm\r\nyyyy" +
            "MMdd HH-mm\r\nyyyyMMdd.HH-mm\r\nyyyyMMddHH-mm\r\n\r\nyyyyMMdd_HH.mm\r\nyyyyMMdd-HH.mm\r\nyyy" +
            "yMMdd HH.mm\r\nyyyyMMdd.HH.mm\r\nyyyyMMddHH.mm\r\n\r\nyyyyMMdd_HH mm\r\nyyyyMMdd-HH mm\r\nyy" +
            "yyMMdd HH mm\r\nyyyyMMdd.HH mm\r\nyyyyMMddHH mm\r\n\r\nyyyyMMdd_HHmm\r\nyyyyMMdd-HHmm\r\nyyy" +
            "yMMdd HHmm\r\nyyyyMMdd.HHmm\r\nyyyyMMddHHmm\r\n\r\n\r\n\r\nyyyy_MM_dd\r\nyyyy-MM-dd\r\nyyyy MM d" +
            "d\r\nyyyy.MM.dd\r\nyyyyMMdd\r\n\r\n")]
        public string RenameDateFormats {
            get {
                return ((string)(this["RenameDateFormats"]));
            }
            set {
                this["RenameDateFormats"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AutoCorrect {
            get {
                return ((string)(this["AutoCorrect"]));
            }
            set {
                this["AutoCorrect"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-charset\r\nfilename=UTF8\r\n-overwrite_original\r\n-m\r\n-F\r\n{IfLocationDateTimeChanged}" +
            "-XMP-exif:GPSDateTime={LocationDateTimeUTC}\r\n{IfLocationDateTimeChanged}-XMP:GPS" +
            "DateTime={LocationDateTimeUTC}\r\n{IfLocationDateTimeChanged}-GPS:GPSDateStamp={Lo" +
            "cationDateTimeDateStamp}\r\n{IfLocationDateTimeChanged}-GPS:GPSTimeStamp={Location" +
            "DateTimeTimeStamp}\r\n{IfLocationDateTimeChanged}-GPSDateStamp={LocationDateTimeDa" +
            "teStamp}\r\n{IfLocationDateTimeChanged}-GPSTimeStamp={LocationDateTimeTimeStamp}\r\n" +
            "{IfMediaDateTakenChanged}-Composite:SubSecCreateDate={MediaDateTaken}\r\n{IfMediaD" +
            "ateTakenChanged}-EXIF:CreateDate={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-XMP" +
            "-xmp:CreateDate={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-XMP:CreateDate={Medi" +
            "aDateTaken}\r\n{IfMediaDateTakenChanged}-XMP:DateTimeOriginal={MediaDateTaken}\r\n{I" +
            "fMediaDateTakenChanged}-IPTC:DigitalCreationDate={MediaDateTakenDateStamp}\r\n{IfM" +
            "ediaDateTakenChanged}-IPTC:DigitalCreationTime={MediaDateTakenTimeStamp}\r\n{IfMed" +
            "iaDateTakenChanged}-Composite:SubSecDateTimeOriginal={MediaDateTaken}\r\n{IfMediaD" +
            "ateTakenChanged}-ExifIFD:DateTimeOriginal={MediaDateTaken}\r\n{IfMediaDateTakenCha" +
            "nged}-EXIF:DateTimeOriginal={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-XMP-phot" +
            "oshop:DateCreated={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-IPTC:DateCreated={" +
            "MediaDateTakenDateStamp}\r\n{IfMediaDateTakenChanged}-IPTC:TimeCreated={MediaDateT" +
            "akenTimeStamp}\r\n{IfMediaDateTakenChanged}-CreateDate={MediaDateTaken}\r\n{IfPerson" +
            "alAlbumChanged}-XMP-xmpDM:Album={PersonalAlbum}\r\n{IfPersonalAlbumChanged}-XMP:Al" +
            "bum={PersonalAlbum}\r\n{IfPersonalAlbumChanged}-IPTC:Headline={PersonalAlbum}\r\n{If" +
            "PersonalAlbumChanged}-XMP-photoshop:Headline={PersonalAlbum}\r\n{IfPersonalAlbumCh" +
            "anged}-ItemList:Album={PersonalAlbum}\r\n{IfPersonalAuthorChanged}-EXIF:Artist={Pe" +
            "rsonalAuthor}\r\n{IfPersonalAuthorChanged}-IPTC:By-line={PersonalAuthor}\r\n{IfPerso" +
            "nalAuthorChanged}-EXIF:XPAuthor={PersonalAuthor}\r\n{IfPersonalAuthorChanged}-Item" +
            "List:Author={PersonalAuthor}\r\n{IfPersonalAuthorChanged}-Creator={PersonalAuthor}" +
            "\r\n{IfPersonalCommentsChanged}-File:Comment={PersonalComments}\r\n{IfPersonalCommen" +
            "tsChanged}-ExifIFD:UserComment={PersonalComments}\r\n{IfPersonalCommentsChanged}-E" +
            "XIF:UserComment={PersonalComments}\r\n{IfPersonalCommentsChanged}-EXIF:XPComment={" +
            "PersonalComments}\r\n{IfPersonalCommentsChanged}-XMP-album:Notes={PersonalComments" +
            "}\r\n{IfPersonalCommentsChanged}-XMP-acdsee:Notes={PersonalComments}\r\n{IfPersonalC" +
            "ommentsChanged}-XMP:UserComment={PersonalComments}\r\n{IfPersonalCommentsChanged}-" +
            "XMP:Notes={PersonalComments}\r\n{IfPersonalCommentsChanged}-ItemList:Comment={Pers" +
            "onalComments}\r\n{IfPersonalDescriptionChanged}-EXIF:ImageDescription={PersonalDes" +
            "cription}\r\n{IfPersonalDescriptionChanged}-XMP:ImageDescription={PersonalDescript" +
            "ion}\r\n{IfPersonalDescriptionChanged}-XMP-dc:Description={PersonalDescription}\r\n{" +
            "IfPersonalDescriptionChanged}-XMP:Description={PersonalDescription}\r\n{IfPersonal" +
            "DescriptionChanged}-IPTC:Caption-Abstract={PersonalDescription}\r\n{IfPersonalDesc" +
            "riptionChanged}-ItemList:Description={PersonalDescription}\r\n{IfPersonalDescripti" +
            "onChanged}-Description={PersonalDescription}\r\n{IfPersonalRatingChanged}-XMP-micr" +
            "osoft:RatingPercent={PersonalRatingPercent}\r\n{IfPersonalRatingChanged}-XMP:Ratin" +
            "gPercent={PersonalRatingPercent}\r\n{IfPersonalRatingChanged}-EXIF:RatingPercent={" +
            "PersonalRatingPercent}\r\n{IfPersonalRatingChanged}-XMP-xmp:Rating={PersonalRating" +
            "}\r\n{IfPersonalRatingChanged}-XMP:Rating={PersonalRating}\r\n{IfPersonalRatingChang" +
            "ed}-XMP-acdsee:Rating={PersonalRating}\r\n{IfPersonalRatingChanged}-EXIF:Rating={P" +
            "ersonalRating}\r\n{IfPersonalRatingChanged}-Rating={PersonalRating}\r\n{IfPersonalTi" +
            "tleChanged}-ItemList:Title={PersonalTitle}\r\n{IfPersonalTitleChanged}-EXIF:XPTitl" +
            "e={PersonalTitle}\r\n{IfPersonalTitleChanged}-XMP-dc:Title={PersonalTitle}\r\n{IfPer" +
            "sonalTitleChanged}-XMP:Title={PersonalTitle}\r\n{IfPersonalTitleChanged}-ItemList:" +
            "Title={PersonalTitle}\r\n{IfLocationLatitudeChanged}-EXIF:GPSLatitude={LocationLat" +
            "itude}\r\n{IfLocationLatitudeChanged}-XMP-exif:GPSLatitude={LocationLatitude}\r\n{If" +
            "LocationLatitudeChanged}-XMP:GPSLatitude={LocationLatitude}\r\n{IfLocationLatitude" +
            "Changed}-GPS:GPSLatitude={LocationLatitude}\r\n{IfLocationLatitudeChanged}-GPSLati" +
            "tude={LocationLatitude}\r\n{IfLocationLongitudeChanged}-EXIF:GPSLongitude={Locatio" +
            "nLongitude}\r\n{IfLocationLongitudeChanged}-XMP-exif:GPSLongitude={LocationLongitu" +
            "de}\r\n{IfLocationLongitudeChanged}-XMP:GPSLongitude={LocationLongitude}\r\n{IfLocat" +
            "ionLongitudeChanged}-GPS:GPSLongitude={LocationLongitude}\r\n{IfLocationLongitudeC" +
            "hanged}-GPSLongitude={LocationLongitude}\r\n{IfLocationNameChanged}-XMP:Location={" +
            "LocationName}\r\n{IfLocationNameChanged}-XMP-iptcCore:Location={LocationName}\r\n{If" +
            "LocationNameChanged}-XMP-iptcExt:LocationShownSublocation={LocationName}\r\n{IfLoc" +
            "ationNameChanged}-XMP:LocationCreatedSublocation={LocationName}\r\n{IfLocationName" +
            "Changed}-IPTC:Sub-location={LocationName}\r\n{IfLocationNameChanged}-Sub-location=" +
            "{LocationName}\r\n{IfLocationNameChanged}-Location={LocationName}\r\n{IfLocationStat" +
            "eChanged}-XMP-iptcExt:LocationShownProvinceState={LocationState}\r\n{IfLocationSta" +
            "teChanged}-XMP-photoshop:State={LocationState}\r\n{IfLocationStateChanged}-IPTC:Pr" +
            "ovince-State={LocationState}\r\n{IfLocationStateChanged}-XMP:State={LocationState}" +
            "\r\n{IfLocationStateChanged}-State={LocationState}\r\n{IfLocationCityChanged}-XMP-ph" +
            "otoshop:City={LocationCity}\r\n{IfLocationCityChanged}-XMP-iptcExt:LocationShownCi" +
            "ty={LocationCity}\r\n{IfLocationCityChanged}-IPTC:City={LocationCity}\r\n{IfLocation" +
            "CityChanged}-XMP:City={LocationCity}\r\n{IfLocationCityChanged}-City={LocationCity" +
            "}\r\n{IfLocationCountryChanged}-IPTC:Country-PrimaryLocationName={LocationCountry}" +
            "\r\n{IfLocationCountryChanged}-XMP-photoshop:Country={LocationCountry}\r\n{IfLocatio" +
            "nCountryChanged}-XMP-iptcExt:LocationShownCountryName={LocationCountry}\r\n{IfLoca" +
            "tionCountryChanged}-XMP:Country={LocationCountry}\r\n{IfLocationCountryChanged}-Co" +
            "untry={LocationCountry}\r\n{IfPersonalRegionChanged}-ImageRegion=\r\n{IfPersonalRegi" +
            "onChanged}-RegionInfoMP={PersonalRegionInfoMP}\r\n{IfPersonalRegionChanged}-Region" +
            "Info={PersonalRegionInfo}\r\n{IfPersonalKeywordsChanged}-Subject=\r\n{IfPersonalKeyw" +
            "ordsChanged}-Keyword=\r\n{IfPersonalKeywordsChanged}-Keywords=\r\n{IfPersonalKeyword" +
            "sChanged}-XPKeywords=\r\n{IfPersonalKeywordsChanged}-Category=\r\n{IfPersonalKeyword" +
            "sChanged}-Categories=\r\n{IfPersonalKeywordsChanged}-CatalogSets=\r\n{IfPersonalKeyw" +
            "ordsChanged}-HierarchicalKeywords=\r\n{IfPersonalKeywordsChanged}-HierarchicalSubj" +
            "ect=\r\n{IfPersonalKeywordsChanged}-LastKeywordXMP=\r\n{IfPersonalKeywordsChanged}-L" +
            "astKeywordIPTC=\r\n{IfPersonalKeywordsChanged}-TagsList=\r\n{IfPersonalKeywordsChang" +
            "ed}{PersonalKeywordItemsDelete}\r\n{IfPersonalKeywordsChanged}{PersonalKeywordItem" +
            "sAdd}\r\n{IfPersonalKeywordsChanged}-Categories={PersonalKeywordsXML}\r\n{IfPersonal" +
            "KeywordsChanged}-XPKeywords={PersonalKeywordsList}\r\n{FileFullPath}\r\n-execute")]
        public string WriteMetadataTags {
            get {
                return ((string)(this["WriteMetadataTags"]));
            }
            set {
                this["WriteMetadataTags"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-Keywords+={KeywordItem}\r\n-Subject+={KeywordItem}\r\n-TagsList+={KeywordItem}\r\n-Cat" +
            "alogSets+={KeywordItem}")]
        public string WriteMetadataKeywordAdd {
            get {
                return ((string)(this["WriteMetadataKeywordAdd"]));
            }
            set {
                this["WriteMetadataKeywordAdd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("192, 192")]
        public global::System.Drawing.Size ApplicationThumbnail {
            get {
                return ((global::System.Drawing.Size)(this["ApplicationThumbnail"]));
            }
            set {
                this["ApplicationThumbnail"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int ThumbmailViewSizeIndex {
            get {
                return ((int)(this["ThumbmailViewSizeIndex"]));
            }
            set {
                this["ThumbmailViewSizeIndex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("en;q=0.5,no;q=0.3,ru;q=0.2,*;q=0.1")]
        public string ApplicationPreferredLanguages {
            get {
                return ((string)(this["ApplicationPreferredLanguages"]));
            }
            set {
                this["ApplicationPreferredLanguages"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-Keywords-={KeywordItem}\r\n-Subject-={KeywordItem}\r\n-TagsList-={KeywordItem}\r\n-Cat" +
            "alogSets-={KeywordItem}")]
        public string WriteMetadataKeywordDelete {
            get {
                return ((string)(this["WriteMetadataKeywordDelete"]));
            }
            set {
                this["WriteMetadataKeywordDelete"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{PersonalKeywordsList}")]
        public string XtraAtomKeywordsVariable {
            get {
                return ((string)(this["XtraAtomKeywordsVariable"]));
            }
            set {
                this["XtraAtomKeywordsVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomKeywordsVideo {
            get {
                return ((bool)(this["XtraAtomKeywordsVideo"]));
            }
            set {
                this["XtraAtomKeywordsVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{PersonalKeywordsList}")]
        public string XtraAtomCategoriesVariable {
            get {
                return ((string)(this["XtraAtomCategoriesVariable"]));
            }
            set {
                this["XtraAtomCategoriesVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomCategoriesVideo {
            get {
                return ((bool)(this["XtraAtomCategoriesVideo"]));
            }
            set {
                this["XtraAtomCategoriesVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{PersonalAlbum}")]
        public string XtraAtomAlbumVariable {
            get {
                return ((string)(this["XtraAtomAlbumVariable"]));
            }
            set {
                this["XtraAtomAlbumVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomAlbumVideo {
            get {
                return ((bool)(this["XtraAtomAlbumVideo"]));
            }
            set {
                this["XtraAtomAlbumVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{PersonalDescription}")]
        public string XtraAtomSubtitleVariable {
            get {
                return ((string)(this["XtraAtomSubtitleVariable"]));
            }
            set {
                this["XtraAtomSubtitleVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomSubtitleVideo {
            get {
                return ((bool)(this["XtraAtomSubtitleVideo"]));
            }
            set {
                this["XtraAtomSubtitleVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomSubtitlePicture {
            get {
                return ((bool)(this["XtraAtomSubtitlePicture"]));
            }
            set {
                this["XtraAtomSubtitlePicture"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{PersonalDescription}")]
        public string XtraAtomSubjectVariable {
            get {
                return ((string)(this["XtraAtomSubjectVariable"]));
            }
            set {
                this["XtraAtomSubjectVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomSubjectVideo {
            get {
                return ((bool)(this["XtraAtomSubjectVideo"]));
            }
            set {
                this["XtraAtomSubjectVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomSubjectPicture {
            get {
                return ((bool)(this["XtraAtomSubjectPicture"]));
            }
            set {
                this["XtraAtomSubjectPicture"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{PersonalComments}")]
        public string XtraAtomCommentVariable {
            get {
                return ((string)(this["XtraAtomCommentVariable"]));
            }
            set {
                this["XtraAtomCommentVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomCommentVideo {
            get {
                return ((bool)(this["XtraAtomCommentVideo"]));
            }
            set {
                this["XtraAtomCommentVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomCommentPicture {
            get {
                return ((bool)(this["XtraAtomCommentPicture"]));
            }
            set {
                this["XtraAtomCommentPicture"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomRatingVideo {
            get {
                return ((bool)(this["XtraAtomRatingVideo"]));
            }
            set {
                this["XtraAtomRatingVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomRatingPicture {
            get {
                return ((bool)(this["XtraAtomRatingPicture"]));
            }
            set {
                this["XtraAtomRatingPicture"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{PersonalAuthor}")]
        public string XtraAtomArtistVariable {
            get {
                return ((string)(this["XtraAtomArtistVariable"]));
            }
            set {
                this["XtraAtomArtistVariable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool XtraAtomArtistVideo {
            get {
                return ((bool)(this["XtraAtomArtistVideo"]));
            }
            set {
                this["XtraAtomArtistVideo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("exiftool -t -a -G0:1 -s -n -P -struct \"{FileFullPath}\"")]
        public string RunBatchImageCommand {
            get {
                return ((string)(this["RunBatchImageCommand"]));
            }
            set {
                this["RunBatchImageCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"exiftool -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""
""C:\Program files\Exiftool\exiftool"" -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""
cmd.exe /K exiftool -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""       
cmd.exe /K /C exiftool -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""
explorer ms-photos?filename=""{FileFullPath}""")]
        public string RunBatchImageCommandList {
            get {
                return ((string)(this["RunBatchImageCommandList"]));
            }
            set {
                this["RunBatchImageCommandList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RunBatchImageWaitForCommand {
            get {
                return ((bool)(this["RunBatchImageWaitForCommand"]));
            }
            set {
                this["RunBatchImageWaitForCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Microsoft.Windows.Photos_8wekyb3d8bbwe!App")]
        public string RunBatchImageAppId {
            get {
                return ((string)(this["RunBatchImageAppId"]));
            }
            set {
                this["RunBatchImageAppId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Microsoft.Windows.Photos_8wekyb3d8bbwe!App\r\nMicrosoft.ScreenSketch_8wekyb3d8bbwe!" +
            "App\r\nMicrosoft.MSPaint_8wekyb3d8bbwe!Microsoft.MSPaint")]
        public string RunBatchImageAppIdList {
            get {
                return ((string)(this["RunBatchImageAppIdList"]));
            }
            set {
                this["RunBatchImageAppIdList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("open")]
        public string RunBatchImageVerb {
            get {
                return ((string)(this["RunBatchImageVerb"]));
            }
            set {
                this["RunBatchImageVerb"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("open\r\nedit")]
        public string RunBatchImageVerbList {
            get {
                return ((string)(this["RunBatchImageVerbList"]));
            }
            set {
                this["RunBatchImageVerbList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RunBatchImageWaitForApp {
            get {
                return ((bool)(this["RunBatchImageWaitForApp"]));
            }
            set {
                this["RunBatchImageWaitForApp"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("exiftool -t -a -G0:1 -s -n -P -struct \"{FileFullPath}\"")]
        public string RunBatchVideoCommand {
            get {
                return ((string)(this["RunBatchVideoCommand"]));
            }
            set {
                this["RunBatchVideoCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"exiftool -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""
""C:\Program files\Exiftool\exiftool"" -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""
cmd.exe /K exiftool -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""       
cmd.exe /K /C exiftool -t -a -G0:1 -s -n -P -struct ""{FileFullPath}""
explorer ms-photos?filename=""{FileFullPath}""")]
        public string RunBatchVideoCommandList {
            get {
                return ((string)(this["RunBatchVideoCommandList"]));
            }
            set {
                this["RunBatchVideoCommandList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RunBatchVideoWaitForCommand {
            get {
                return ((bool)(this["RunBatchVideoWaitForCommand"]));
            }
            set {
                this["RunBatchVideoWaitForCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Microsoft.Windows.Photos_8wekyb3d8bbwe!App")]
        public string RunBatchVideoAppId {
            get {
                return ((string)(this["RunBatchVideoAppId"]));
            }
            set {
                this["RunBatchVideoAppId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Microsoft.Windows.Photos_8wekyb3d8bbwe!App")]
        public string RunBatchVideoAppIdList {
            get {
                return ((string)(this["RunBatchVideoAppIdList"]));
            }
            set {
                this["RunBatchVideoAppIdList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RunBatchVideoWaitForApp {
            get {
                return ((bool)(this["RunBatchVideoWaitForApp"]));
            }
            set {
                this["RunBatchVideoWaitForApp"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("open")]
        public string RunBatchVideoVerb {
            get {
                return ((string)(this["RunBatchVideoVerb"]));
            }
            set {
                this["RunBatchVideoVerb"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("open\r\nedit")]
        public string RunBatchVideoVerbList {
            get {
                return ((string)(this["RunBatchVideoVerbList"]));
            }
            set {
                this["RunBatchVideoVerbList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("AppX43hnxtbyyps62jhe9sqpdzxn1790zetc")]
        public string OpenWithImageProgId {
            get {
                return ((string)(this["OpenWithImageProgId"]));
            }
            set {
                this["OpenWithImageProgId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("open")]
        public string OpenWithImageVerb {
            get {
                return ((string)(this["OpenWithImageVerb"]));
            }
            set {
                this["OpenWithImageVerb"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool OpenWithImageWaitForExit {
            get {
                return ((bool)(this["OpenWithImageWaitForExit"]));
            }
            set {
                this["OpenWithImageWaitForExit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("AppX43hnxtbyyps62jhe9sqpdzxn1790zetc")]
        public string OpenWithVideoProgId {
            get {
                return ((string)(this["OpenWithVideoProgId"]));
            }
            set {
                this["OpenWithVideoProgId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("open")]
        public string OpenWithVideoVerb {
            get {
                return ((string)(this["OpenWithVideoVerb"]));
            }
            set {
                this["OpenWithVideoVerb"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool OpenWithVideoWaitForExit {
            get {
                return ((bool)(this["OpenWithVideoWaitForExit"]));
            }
            set {
                this["OpenWithVideoWaitForExit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string RunArgumentCommandList {
            get {
                return ((string)(this["RunArgumentCommandList"]));
            }
            set {
                this["RunArgumentCommandList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd /K exiftool -charset utf8 -charset iptc=utf8 -codedcharacterset=utf8 -m -@ \"{" +
            "TempFileArgumentFullPath}\"")]
        public string RunArgumentCommand {
            get {
                return ((string)(this["RunArgumentCommand"]));
            }
            set {
                this["RunArgumentCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1000")]
        public int MaxRowsInSearchResult {
            get {
                return ((int)(this["MaxRowsInSearchResult"]));
            }
            set {
                this["MaxRowsInSearchResult"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string RunArgumentBuildCommandList {
            get {
                return ((string)(this["RunArgumentBuildCommandList"]));
            }
            set {
                this["RunArgumentBuildCommandList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cmd /K exiftool -charset utf8 -charset iptc=utf8 -codedcharacterset=utf8 -m -@ \"{" +
            "TempFileArgumentFullPath}\"")]
        public string RunArgumentBuildCommand {
            get {
                return ((string)(this["RunArgumentBuildCommand"]));
            }
            set {
                this["RunArgumentBuildCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-Keywords+={KeywordItem}\r\n-Subject+={KeywordItem}\r\n-TagsList+={KeywordItem}\r\n-Cat" +
            "alogSets+={KeywordItem}")]
        public string RunArgumentBuildKeywordAdd {
            get {
                return ((string)(this["RunArgumentBuildKeywordAdd"]));
            }
            set {
                this["RunArgumentBuildKeywordAdd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-Keywords-={KeywordItem}\r\n-Subject-={KeywordItem}\r\n-TagsList-={KeywordItem}\r\n-Cat" +
            "alogSets-={KeywordItem}")]
        public string RunArgumentBuildKeywordDelete {
            get {
                return ((string)(this["RunArgumentBuildKeywordDelete"]));
            }
            set {
                this["RunArgumentBuildKeywordDelete"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-charset\r\nfilename=UTF8\r\n-overwrite_original\r\n-m\r\n-F\r\n{IfLocationDateTimeChanged}" +
            "-XMP-exif:GPSDateTime={LocationDateTimeUTC}\r\n{IfLocationDateTimeChanged}-XMP:GPS" +
            "DateTime={LocationDateTimeUTC}\r\n{IfLocationDateTimeChanged}-GPS:GPSDateStamp={Lo" +
            "cationDateTimeDateStamp}\r\n{IfLocationDateTimeChanged}-GPS:GPSTimeStamp={Location" +
            "DateTimeTimeStamp}\r\n{IfLocationDateTimeChanged}-GPSDateStamp={LocationDateTimeDa" +
            "teStamp}\r\n{IfLocationDateTimeChanged}-GPSTimeStamp={LocationDateTimeTimeStamp}\r\n" +
            "{IfMediaDateTakenChanged}-Composite:SubSecCreateDate={MediaDateTaken}\r\n{IfMediaD" +
            "ateTakenChanged}-EXIF:CreateDate={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-XMP" +
            "-xmp:CreateDate={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-XMP:CreateDate={Medi" +
            "aDateTaken}\r\n{IfMediaDateTakenChanged}-XMP:DateTimeOriginal={MediaDateTaken}\r\n{I" +
            "fMediaDateTakenChanged}-IPTC:DigitalCreationDate={MediaDateTakenDateStamp}\r\n{IfM" +
            "ediaDateTakenChanged}-IPTC:DigitalCreationTime={MediaDateTakenTimeStamp}\r\n{IfMed" +
            "iaDateTakenChanged}-Composite:SubSecDateTimeOriginal={MediaDateTaken}\r\n{IfMediaD" +
            "ateTakenChanged}-ExifIFD:DateTimeOriginal={MediaDateTaken}\r\n{IfMediaDateTakenCha" +
            "nged}-EXIF:DateTimeOriginal={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-XMP-phot" +
            "oshop:DateCreated={MediaDateTaken}\r\n{IfMediaDateTakenChanged}-IPTC:DateCreated={" +
            "MediaDateTakenDateStamp}\r\n{IfMediaDateTakenChanged}-IPTC:TimeCreated={MediaDateT" +
            "akenTimeStamp}\r\n{IfMediaDateTakenChanged}-CreateDate={MediaDateTaken}\r\n{IfPerson" +
            "alAlbumChanged}-XMP-xmpDM:Album={PersonalAlbum}\r\n{IfPersonalAlbumChanged}-XMP:Al" +
            "bum={PersonalAlbum}\r\n{IfPersonalAlbumChanged}-IPTC:Headline={PersonalAlbum}\r\n{If" +
            "PersonalAlbumChanged}-XMP-photoshop:Headline={PersonalAlbum}\r\n{IfPersonalAlbumCh" +
            "anged}-ItemList:Album={PersonalAlbum}\r\n{IfPersonalAuthorChanged}-EXIF:Artist={Pe" +
            "rsonalAuthor}\r\n{IfPersonalAuthorChanged}-IPTC:By-line={PersonalAuthor}\r\n{IfPerso" +
            "nalAuthorChanged}-EXIF:XPAuthor={PersonalAuthor}\r\n{IfPersonalAuthorChanged}-Item" +
            "List:Author={PersonalAuthor}\r\n{IfPersonalAuthorChanged}-Creator={PersonalAuthor}" +
            "\r\n{IfPersonalCommentsChanged}-File:Comment={PersonalComments}\r\n{IfPersonalCommen" +
            "tsChanged}-ExifIFD:UserComment={PersonalComments}\r\n{IfPersonalCommentsChanged}-E" +
            "XIF:UserComment={PersonalComments}\r\n{IfPersonalCommentsChanged}-EXIF:XPComment={" +
            "PersonalComments}\r\n{IfPersonalCommentsChanged}-XMP-album:Notes={PersonalComments" +
            "}\r\n{IfPersonalCommentsChanged}-XMP-acdsee:Notes={PersonalComments}\r\n{IfPersonalC" +
            "ommentsChanged}-XMP:UserComment={PersonalComments}\r\n{IfPersonalCommentsChanged}-" +
            "XMP:Notes={PersonalComments}\r\n{IfPersonalCommentsChanged}-ItemList:Comment={Pers" +
            "onalComments}\r\n{IfPersonalDescriptionChanged}-EXIF:ImageDescription={PersonalDes" +
            "cription}\r\n{IfPersonalDescriptionChanged}-XMP:ImageDescription={PersonalDescript" +
            "ion}\r\n{IfPersonalDescriptionChanged}-XMP-dc:Description={PersonalDescription}\r\n{" +
            "IfPersonalDescriptionChanged}-XMP:Description={PersonalDescription}\r\n{IfPersonal" +
            "DescriptionChanged}-IPTC:Caption-Abstract={PersonalDescription}\r\n{IfPersonalDesc" +
            "riptionChanged}-ItemList:Description={PersonalDescription}\r\n{IfPersonalDescripti" +
            "onChanged}-Description={PersonalDescription}\r\n{IfPersonalRatingChanged}-XMP-micr" +
            "osoft:RatingPercent={PersonalRatingPercent}\r\n{IfPersonalRatingChanged}-XMP:Ratin" +
            "gPercent={PersonalRatingPercent}\r\n{IfPersonalRatingChanged}-EXIF:RatingPercent={" +
            "PersonalRatingPercent}\r\n{IfPersonalRatingChanged}-XMP-xmp:Rating={PersonalRating" +
            "}\r\n{IfPersonalRatingChanged}-XMP:Rating={PersonalRating}\r\n{IfPersonalRatingChang" +
            "ed}-XMP-acdsee:Rating={PersonalRating}\r\n{IfPersonalRatingChanged}-EXIF:Rating={P" +
            "ersonalRating}\r\n{IfPersonalRatingChanged}-Rating={PersonalRating}\r\n{IfPersonalTi" +
            "tleChanged}-ItemList:Title={PersonalTitle}\r\n{IfPersonalTitleChanged}-EXIF:XPTitl" +
            "e={PersonalTitle}\r\n{IfPersonalTitleChanged}-XMP-dc:Title={PersonalTitle}\r\n{IfPer" +
            "sonalTitleChanged}-XMP:Title={PersonalTitle}\r\n{IfPersonalTitleChanged}-ItemList:" +
            "Title={PersonalTitle}\r\n{IfLocationLatitudeChanged}-EXIF:GPSLatitude={LocationLat" +
            "itude}\r\n{IfLocationLatitudeChanged}-XMP-exif:GPSLatitude={LocationLatitude}\r\n{If" +
            "LocationLatitudeChanged}-XMP:GPSLatitude={LocationLatitude}\r\n{IfLocationLatitude" +
            "Changed}-GPS:GPSLatitude={LocationLatitude}\r\n{IfLocationLatitudeChanged}-GPSLati" +
            "tude={LocationLatitude}\r\n{IfLocationLongitudeChanged}-EXIF:GPSLongitude={Locatio" +
            "nLongitude}\r\n{IfLocationLongitudeChanged}-XMP-exif:GPSLongitude={LocationLongitu" +
            "de}\r\n{IfLocationLongitudeChanged}-XMP:GPSLongitude={LocationLongitude}\r\n{IfLocat" +
            "ionLongitudeChanged}-GPS:GPSLongitude={LocationLongitude}\r\n{IfLocationLongitudeC" +
            "hanged}-GPSLongitude={LocationLongitude}\r\n{IfLocationNameChanged}-XMP:Location={" +
            "LocationName}\r\n{IfLocationNameChanged}-XMP-iptcCore:Location={LocationName}\r\n{If" +
            "LocationNameChanged}-XMP-iptcExt:LocationShownSublocation={LocationName}\r\n{IfLoc" +
            "ationNameChanged}-XMP:LocationCreatedSublocation={LocationName}\r\n{IfLocationName" +
            "Changed}-IPTC:Sub-location={LocationName}\r\n{IfLocationNameChanged}-Sub-location=" +
            "{LocationName}\r\n{IfLocationNameChanged}-Location={LocationName}\r\n{IfLocationStat" +
            "eChanged}-XMP-iptcExt:LocationShownProvinceState={LocationState}\r\n{IfLocationSta" +
            "teChanged}-XMP-photoshop:State={LocationState}\r\n{IfLocationStateChanged}-IPTC:Pr" +
            "ovince-State={LocationState}\r\n{IfLocationStateChanged}-XMP:State={LocationState}" +
            "\r\n{IfLocationStateChanged}-State={LocationState}\r\n{IfLocationCityChanged}-XMP-ph" +
            "otoshop:City={LocationCity}\r\n{IfLocationCityChanged}-XMP-iptcExt:LocationShownCi" +
            "ty={LocationCity}\r\n{IfLocationCityChanged}-IPTC:City={LocationCity}\r\n{IfLocation" +
            "CityChanged}-XMP:City={LocationCity}\r\n{IfLocationCityChanged}-City={LocationCity" +
            "}\r\n{IfLocationCountryChanged}-IPTC:Country-PrimaryLocationName={LocationCountry}" +
            "\r\n{IfLocationCountryChanged}-XMP-photoshop:Country={LocationCountry}\r\n{IfLocatio" +
            "nCountryChanged}-XMP-iptcExt:LocationShownCountryName={LocationCountry}\r\n{IfLoca" +
            "tionCountryChanged}-XMP:Country={LocationCountry}\r\n{IfLocationCountryChanged}-Co" +
            "untry={LocationCountry}\r\n{IfPersonalRegionChanged}-ImageRegion=\r\n{IfPersonalRegi" +
            "onChanged}-RegionInfoMP={PersonalRegionInfoMP}\r\n{IfPersonalRegionChanged}-Region" +
            "Info={PersonalRegionInfo}\r\n{IfPersonalKeywordsChanged}-Subject=\r\n{IfPersonalKeyw" +
            "ordsChanged}-Keyword=\r\n{IfPersonalKeywordsChanged}-Keywords=\r\n{IfPersonalKeyword" +
            "sChanged}-XPKeywords=\r\n{IfPersonalKeywordsChanged}-Category=\r\n{IfPersonalKeyword" +
            "sChanged}-Categories=\r\n{IfPersonalKeywordsChanged}-CatalogSets=\r\n{IfPersonalKeyw" +
            "ordsChanged}-HierarchicalKeywords=\r\n{IfPersonalKeywordsChanged}-HierarchicalSubj" +
            "ect=\r\n{IfPersonalKeywordsChanged}-LastKeywordXMP=\r\n{IfPersonalKeywordsChanged}-L" +
            "astKeywordIPTC=\r\n{IfPersonalKeywordsChanged}-TagsList=\r\n{IfPersonalKeywordsChang" +
            "ed}{PersonalKeywordItemsDelete}\r\n{IfPersonalKeywordsChanged}{PersonalKeywordItem" +
            "sAdd}\r\n{IfPersonalKeywordsChanged}-Categories={PersonalKeywordsXML}\r\n{IfPersonal" +
            "KeywordsChanged}-XPKeywords={PersonalKeywordsList}\r\n{FileFullPath}\r\n-execute")]
        public string RunArgumentBuildKeywordTags {
            get {
                return ((string)(this["RunArgumentBuildKeywordTags"]));
            }
            set {
                this["RunArgumentBuildKeywordTags"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int SuggestRegionNameTopMostCount {
            get {
                return ((int)(this["SuggestRegionNameTopMostCount"]));
            }
            set {
                this["SuggestRegionNameTopMostCount"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int SuggestRegionNameNearbyDays {
            get {
                return ((int)(this["SuggestRegionNameNearbyDays"]));
            }
            set {
                this["SuggestRegionNameNearbyDays"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.3")]
        public float RegionMissmatchProcent {
            get {
                return ((float)(this["RegionMissmatchProcent"]));
            }
            set {
                this["RegionMissmatchProcent"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Unknown 1\r\nUnknown 2\r\nUnknown 3")]
        public string PeopleRename {
            get {
                return ((string)(this["PeopleRename"]));
            }
            set {
                this["PeopleRename"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AvoidOfflineMediaFiles {
            get {
                return ((bool)(this["AvoidOfflineMediaFiles"]));
            }
            set {
                this["AvoidOfflineMediaFiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ImageViewLoadThumbnailOnDemandMode {
            get {
                return ((bool)(this["ImageViewLoadThumbnailOnDemandMode"]));
            }
            set {
                this["ImageViewLoadThumbnailOnDemandMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ffmpeg.exe")]
        public string ConvertAndMergeExecute {
            get {
                return ((string)(this["ConvertAndMergeExecute"]));
            }
            set {
                this["ConvertAndMergeExecute"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"-y -i ""{AudioFileFullPath}"" -f concat -safe 0 -i ""{ArgumentFileFullPath}"" -framerate 1/2 -vf ""scale=1080:720:force_original_aspect_ratio=decrease,pad=1080:720:(ow-iw)/2:(oh-ih)/2,setsar=1"" -c:v libx264 -crf 14 -r 25 -pix_fmt yuv420p -shortest ""{TempFileFullPath}""")]
        public string ConvertAndMergeConcatImagesArguments {
            get {
                return ((string)(this["ConvertAndMergeConcatImagesArguments"]));
            }
            set {
                this["ConvertAndMergeConcatImagesArguments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("file \'{ImageFileFullPath}\'\r\nduration {Duration}")]
        public string ConvertAndMergeConcatImagesArguFile {
            get {
                return ((string)(this["ConvertAndMergeConcatImagesArguFile"]));
            }
            set {
                this["ConvertAndMergeConcatImagesArguFile"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-safe 0 -f concat -i \"{ArgumentFileFullPath}\" -preset fast -c:a aac -b:a 192k -ac" +
            " 2 -c:v libx264 -b:v 1024k -profile:v high -level 4.1 -crf -1 -pix_fmt yuv420p \"" +
            "{TempFileFullPath}\"")]
        public string ConvertAndMergeConcatVideosArguments {
            get {
                return ((string)(this["ConvertAndMergeConcatVideosArguments"]));
            }
            set {
                this["ConvertAndMergeConcatVideosArguments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{VideoFileFullPath}")]
        public string ConvertAndMergeConcatVideosArguFile {
            get {
                return ((string)(this["ConvertAndMergeConcatVideosArguFile"]));
            }
            set {
                this["ConvertAndMergeConcatVideosArguFile"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\Resources\\Silent.wav")]
        public string ConvertAndMergeMusic {
            get {
                return ((string)(this["ConvertAndMergeMusic"]));
            }
            set {
                this["ConvertAndMergeMusic"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int ConvertAndMergeImageDuration {
            get {
                return ((int)(this["ConvertAndMergeImageDuration"]));
            }
            set {
                this["ConvertAndMergeImageDuration"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool RunBatchInTerminalWindow {
            get {
                return ((bool)(this["RunBatchInTerminalWindow"]));
            }
            set {
                this["RunBatchInTerminalWindow"] = value;
            }
        }
    }
}
